const sharp = require('sharp');
const path = require('path');
const fs = require('fs').promises;
require('dotenv').config();

const IMAGE_CACHE_PATH = process.env.IMAGE_CACHE_PATH || './cache/summary.png';
const IMAGE_WIDTH = 800;
const IMAGE_HEIGHT = 600;

function createTextElement(text, x, y, fontSize = 20, fill = '#333333', fontWeight = 'normal') {
  return `<text x="${x}" y="${y}" font-size="${fontSize}" fill="${fill}" font-family="Arial, sans-serif" font-weight="${fontWeight}">${text}</text>`;
}

function formatNumber(num) {
  if (num === null || num === undefined) return 'N/A';
  return num.toLocaleString('en-US', { maximumFractionDigits: 0 });
}

function formatCurrency(gdp) {
  if (gdp === null || gdp === undefined) return 'N/A';

  const billions = gdp / 1000000000;
  
  if (billions >= 1) {
    return `$${billions.toFixed(2)}B`;
  }

  const millions = gdp / 1000000;
  return `$${millions.toFixed(2)}M`;
}

async function generateSummaryImage(totalCountries, topCountries, lastRefreshed) {
  try {
    console.log('üé® Generating summary image...');
   
    const svgContent = `
      <svg width="${IMAGE_WIDTH}" height="${IMAGE_HEIGHT}" xmlns="http://www.w3.org/2000/svg">
        <!-- Background -->
        <rect width="${IMAGE_WIDTH}" height="${IMAGE_HEIGHT}" fill="#f5f5f5"/>
        
        <!-- Header background -->
        <rect width="${IMAGE_WIDTH}" height="80" fill="#2c3e50"/>
        
        <!-- Title -->
        ${createTextElement('Country Data Summary', 50, 50, 32, '#ffffff', 'bold')}
        
        <!-- Total Countries -->
        ${createTextElement('Total Countries', 50, 130, 20, '#555555', 'bold')}
        ${createTextElement(formatNumber(totalCountries), 50, 160, 36, '#2c3e50', 'bold')}
        
        <!-- Last Refreshed -->
        ${createTextElement('Last Refreshed', 50, 210, 16, '#777777')}
        ${createTextElement(new Date(lastRefreshed).toLocaleString(), 50, 235, 14, '#555555')}
        
        <!-- Top Countries Title -->
        ${createTextElement('Top 5 Countries by Estimated GDP', 50, 280, 22, '#2c3e50', 'bold')}
        
        <!-- Top Countries List -->
        ${topCountries.map((country, index) => `
          ${createTextElement(`${index + 1}. ${country.name}`, 70, 320 + (index * 40), 18, '#333333', 'bold')}
          ${createTextElement(`GDP: ${formatCurrency(country.estimated_gdp)}`, 90, 340 + (index * 40), 14, '#666666')}
        `).join('')}
        
        <!-- Footer -->
        ${createTextElement('Generated by Country Data API', 50, 570, 12, '#999999')}
      </svg>
    `;
   
    const cacheDir = path.dirname(IMAGE_CACHE_PATH);
    await fs.mkdir(cacheDir, { recursive: true });
   
    await sharp(Buffer.from(svgContent))
      .png()
      .toFile(IMAGE_CACHE_PATH);
    
    console.log(`‚úÖ Summary image saved to: ${IMAGE_CACHE_PATH}`);
    return IMAGE_CACHE_PATH;
    
  } catch (error) {
    console.error('‚ùå Error generating summary image:', error);
    throw error;
  }
}

async function imageExists() {
  try {
    await fs.access(IMAGE_CACHE_PATH);
    return true;
  } catch {
    return false;
  }
}

function getImagePath() {
  return IMAGE_CACHE_PATH;
}

module.exports = {
  generateSummaryImage,
  imageExists,
  getImagePath
};